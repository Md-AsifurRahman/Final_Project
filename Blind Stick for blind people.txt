/*************************************************************

  This is a simple demo of sending and receiving some data.
  Be sure to check out other examples!
 *************************************************************/

/* Fill-in information from Blynk Device Info here */
#define BLYNK_TEMPLATE_ID "TMPL6tSpffmhe"
#define BLYNK_TEMPLATE_NAME "Blind stick"
#define BLYNK_AUTH_TOKEN "hmSYCKgExTWjlDPn72dVmZjQiw3bIwrW"

/* Comment this out to disable prints and save space */
#define BLYNK_PRINT Serial
const int trigPin = D1;
const int echoPin = D2;
const int waterSensorPin = A0;
const int buzzerPin = D7;

#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

// Your WiFi credentials.
// Set password to "" for open networks.
char ssid[] = "Smart";
char pass[] = "menthokol";

BlynkTimer timer;

// This function is called every time the Virtual Pin 0 state changes
BLYNK_WRITE(V0) {
  // Set incoming value from pin V0 to a variable
  int value = param.asInt();

  // Update state
  //Blynk.virtualWrite(V0, value);
  //value = !value;
  digitalWrite(buzzerPin, value);
  if (value)

    delay(5000);
  //digitalWrite(LED_BUILTIN, value);
}

// This function is called every time the device is connected to the Blynk.Cloud
BLYNK_CONNECTED() {
  // Change Web Link Button message to "Congratulations!"
  Blynk.setProperty(V3, "offImageUrl", "https://static-image.nyc3.cdn.digitaloceanspaces.com/general/fte/congratulations.png");
  Blynk.setProperty(V3, "onImageUrl", "https://static-image.nyc3.cdn.digitaloceanspaces.com/general/fte/congratulations_pressed.png");
  Blynk.setProperty(V3, "url", "https://docs.blynk.io/en/getting-started/what-do-i-need-to-blynk/how-quickstart-device-was-made");
}

// This function sends Arduino's uptime every second to Virtual Pin 2.
void myTimerEvent() {
  // You can send any value at any time.
  // Please don't send more that 10 values per second.
  Blynk.virtualWrite(V2, millis() / 1000);
}

void setup() {
  // Debug console
  Serial.begin(115200);
  pinMode(LED_BUILTIN, OUTPUT);
  Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass);
  // You can also specify server:
  //Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass, "blynk.cloud", 80);
  //Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass, IPAddress(192,168,1,100), 8080);

  // Setup a function to be called every second
  timer.setInterval(1000L, myTimerEvent);

  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(waterSensorPin, INPUT);
  pinMode(buzzerPin, OUTPUT);
}

void loop() {
  Blynk.run();
  timer.run();
  // Ultrasonic Sensor Reading
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  long duration = pulseIn(echoPin, HIGH);
  float distance = (duration * 0.0343) / 2;  // Distance in cm

  // Water Level Sensor Reading
  int sensorValue = analogRead(waterSensorPin);
  float voltage = sensorValue * (3.3 / 1023.0);  // Convert to voltage

  // Display Distance and Water Level
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.print(" cm\t");
  Serial.print("Water Level: ");
  Serial.println(voltage);

  // Buzzer Control Logic
  if (distance < 50 || voltage < 2) {  // If object is within 100 cm
    digitalWrite(buzzerPin, HIGH);         // Turn on buzzer
  } else {
    digitalWrite(buzzerPin, LOW);  // Turn off buzzer
  }

  // if (voltage < 2) { // Adjust threshold as needed
  //   digitalWrite(buzzerPin, HIGH); // Turn on buzzer
  // } else {
  //   digitalWrite(buzzerPin, LOW); // Turn off buzzer
  // }

  delay(1000);  // Wait for 1 second before next reading
  // You can inject your own code or combine it with other sketches.
  // Check other examples on how to communicate with Blynk. Remember
  // to avoid delay() function!
}